package Game;
import java.util.*;

public class Game_Start {

	private static int Randomizer(int x, int y) {
		int min = x;
		int max = y;
		
		double random = (min + Math.random() * (max + 1 - min));
		random = Math.floor(random);
		return (int) random;
	}
	
	public static void main(String[] args) {
		Card_Constructor[] TreasureCards = {
				
				new Treasure("Boots of Running Really Fast", 0, 400, "Human", null, "Shoes", null), //gives -2 to escape
				new Treasure("Spiky Knees", 1, 200, null, "Human", "", null),
				new Treasure("Staff of Napalm", 5, 800, "Human", "Wizard", "1 Hand", null),
				new Treasure("Stepladder", 3, 400, "Halfling", null, "", null),
				new Treasure("Swiss Army Polearm", 4, 600, "Human", null, "2 Hand", null),
				new Treasure("Flaming Armor", 2, 400, "Human", null, "Armour", null),
				new Treasure("Club", 3, 400, "Human", null, "1 Hand", null),
				new Treasure("Hammer of Kneecap", 4, 600, "Dwarf", null, "1 Hand", null),
				new Treasure("Helm of Courage", 1, 200, "Human", null, "Helmet", null),
				new Treasure("Huge Rock", 3, 0, "Human", null, "2 Hand", null),
				new Treasure("Leather Armor", 1, 200, "Human", null, "Armour", null),
				new Treasure("Stincky Sandwich", 3, 400, "Halfling", null, "Regular", null),
				new Treasure("Mace of Sharpness", 4, 600, "Human", "Cliric", "1 Hand", null),
				new Treasure("Mithryl Armor", 3, 600, "Human", "!Wizards", "Armor", null),
				new Treasure("Bad Ass Bandana", 3, 400, "Human", null, "Armor", null),
				new Treasure("Boots of Butt-Kicking", 2, 400, "Human", null, "Shoes", null),
				new Treasure("Bow with Ribbons", 4, 800, "Elf", null, "2 Hand", null),
				new Treasure("Broad Sword", 3, 400, "Human", null, "1 Hand", null),
				new Treasure("Buckler of Swasher", 2, 400, "Human", null, "1 Hand", null),
				new Treasure("Chainsaw of Bloody Dismemberment", 3, 600, "Human", null, "2 Hand", null),
				new Treasure("Cheese Grater of Peace", 3, 400, "Human", "Cliric", "1 Hand", null),
				new Treasure("Cloak of Obcsurity", 4, 600, "Human", "Thieves", "Regular", null),
				new Treasure("Dagger of Treachery", 3, 400, "Human", "Thieves", "1 Hand", null),
				new Treasure("Eleven-Foot Pole", 1, 200, "Human", null, "2 Hand", null), //23 Treasures ATM
				new Treasure("Elf Race Card", 0, 000, "", null, "", "Turns you into an elf!"),
				new Treasure("Elf Race Card", 0, 000, "", null, "", "Turns you into an elf!"),
				new Treasure("Dwarf Race Card", 0, 000, "", null, "", "Turns you into a dwarf!"),
				new Treasure("Dwarf Race Card", 0, 000, "", null, "", "Turns you into a dwarf!"),
				new Treasure("Halfling Race Card", 0, 000, "", null, "", "Turns you into a halfling!"),
				new Treasure("Halfling Race Card", 0, 000, "", null, "", "Turns you into a halfling!"),
				new Treasure("Warrior Class Card", 0, 000, "", null, "", "Makes you a warrior!"),
				new Treasure("Warrior Class Card", 0, 000, "", null, "", "Makes you a warrior!"),
				new Treasure("Thief Class Card", 0, 000, "", null, "", "Makes you a thief!"),
				new Treasure("Thief Class Card", 0, 000, "", null, "", "Makes you a thief!"),
				new Treasure("Wizard Class Card", 0, 000, "", null, "", "Makes you a wizard!"),
				new Treasure("Wizard Class Card", 0, 000, "", null, "", "Makes you a wizard!"),
				new Treasure("Cliric Class Card", 0, 000, "", null, "", "Makes you a cliric!"),
				new Treasure("Cliric Class Card", 0, 000, "", null, "", "Makes you a cliric!"),
				new Treasure("Get a level!", 0, 000, "", null, "", "Level Up!"),
				new Treasure("Get a level!", 0, 000, "", null, "", "Level Up!"),

				};
		Scanner console = new Scanner(System.in);
		
		Card_Constructor[] startingHand = new Treasure[8];
		Card_Constructor[] playerHand = new Treasure[5];
		
		for(int i = 0; i < 8; i++) {
			startingHand[i] = TreasureCards[Randomizer(0, 37)];
		System.out.print("\n-=" + i + "=- " + startingHand[i]);
		}
		
		System.out.println("\n\nGAME START! Choose Five Cards");
		for(int v = 0; v < 5; v++) {
			System.out.println("Pick the "+ (v+1)+" card(0-7 only):");
			int number = console.nextInt();
			playerHand[v] = startingHand[number];
		}
		
		Race race = null;
		Class Class = null;
		int bonusStat = 0;
		int lvlStat = 1;
		
//		for(int b = 0; b < 5; b++) {
			
			/*if (playerHand[b].specialCondition.equals("Turns you into an elf!")) race = new Race("Elf");
			else if (playerHand[b].specialCondition.equals("Turns you into a hafling!")) race = new Race("Hafling");
			else if (playerHand[b].specialCondition.equals("Turns you into a dwarf!")) race = new Race("Dwarf");
			else if (playerHand[b].specialCondition.equals("Makes you a warrior!")) Class = new Class("Warrior");
			else if (playerHand[b].specialCondition.equals("Makes you a wizard!")) Class = new Class("Wizard");
			else if (playerHand[b].specialCondition.equals("Makes you a thief!")) Class = new Class("Thief");
			else if (playerHand[b].specialCondition.equals("Makes you a cliric!")) Class = new Class("Cliric");*/
//			if (playerHand[b].specialCondition.equals("Level Up!")) lvlStat++;
//			
//			bonusStat += playerHand[b].bonus;
//			System.out.print(playerHand[b]);
//			
//		}
		
		Hero Player = new Hero(Class, race, bonusStat, lvlStat);
		
		System.out.print("\n\n"+Player);
		
	}

	
}
